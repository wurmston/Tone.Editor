!function(){function e(){i.containerElement=document.createElement("div"),i.containerElement.setAttribute("id","tone-editor_container"),document.body.appendChild(i.containerElement),i.hasBeenInitialized=!0}function t(e){this.element=document.createElement("div"),this.element.className="tone-editor_component",this._component=e,this.component=e.get();for(parameterName in this.component)this.component[parameterName]=new n(this.component[parameterName])}function n(e){this.ToneParam=e.originalObject,this.type=e.type,this.value=e.value,this.refresh=function(){},this.element=document.createElement("p"),this.element.className="tone-editor_parameter-gui "+this.type;var t=document.createTextNode(parameterName+": "+this.value);this.element.appendChild(t)}function o(t){this.hasBeenInitialized||e(),i.containerElement.appendChild(t)}var i={components:[],hasBeenInitialized:!1,add:function(e,n,a){for(var r=document.createDocumentFragment(),m=arguments,c=0;c<m.length;c++){console.log(arguments[c]);var s=new t(m[c]);i.components.push(s),r.appendChild(s.element)}return o(r),i},remove:function(e){for(var t=0;t<components.length;t++)Object.is(components[t],e);return i},set:function(e){return i}};Tone.Editor=i}();
function extend(s,t){for(var i in t)t.hasOwnProperty(i)&&(s[i]=t[i])}Node.prototype.hasClass=function(s){return this.classList?this.classList.contains(s):-1<this.className.indexOf(s)},Node.prototype.addClass=function(s){if(this.classList)this.classList.add(s);else if(!this.hasClass(s)){var t=this.className.split(" ");t.push(s),this.className=t.join(" ")}return this},Node.prototype.removeClass=function(s){if(this.classList)this.classList.remove(s);else{var t=this.className.split(" ");t.splice(t.indexOf(s),1),this.className=t.join(" ")}return this},Number.prototype.remap=function(s,t,i,e){var a=this;return a<s&&(a=s),a>t&&(a=t),(a-s)*(e-i)/(t-s)+i};var remap=function(s,t,i,e,a){return s<t&&(s=t),s>i&&(s=i),(s-t)*(a-e)/(i-t)+e};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
